<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAiQAAACkCAYAAACn3DWBAAAABGdBTUEAAK/INwWK6QAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABFdSURBVHhe7d1b
        TxXLuodxBUERFDyhgicQ8YAHFDwfJktENKhBTVDjjRfGC+ONdyZeOT/X+iT7Yn+V2v3UtNhj7byRZGaP
        rrFcz0x+6UGN7q53DDPT/1RV99jW/JckSZIqCxslSZLaFDZKkiS1KWyUJElqU9goSZLUprBRkiSpTWGj
        JElSm8JGSZKkNoWNkiRJbQobJUmS2hQ2SpIktSlslCRJalPYKEmS1KawUZIkqU1hoyRJUpvCRkmSpDaF
        jZIkSW0KGyVJktoUNkqSJLUpbJQkSWpT2ChJktSmsFGSJKlNYaMkSVKbwkZJkqQ2hY1pY2MjrayspPPn
        z6fx8fE0NzeXbt68me7evZtu376d7t27l/74449NDx8+TI8ePUqrq6tpbW0tPXv2LD1//jx9+PAh/fjx
        I33+/Dm9evUqXb16NexPkiT1jgo5IGxMDx48SG/fvs3FnDlzJh07diwXc/HixXThwoV06dKl7PLly9n8
        /Hy6du1aWlxczAXfuXMn3b9/P3+g79+/p3fv3qWFhYU0PT0d9idJknpHhRwQNuYEs7y8nNbX19OVK1fS
        oUOH0sTExCYKw/Hjx9OJEyfSqVOn0smTJ9PU1FSamZnJxZ89ezYnpi9fvqTHjx/nIk6fPh32J0mSekeF
        HBA2pnPnzuUkQ8Jhe/jw4bR3795No6OjaWxsLO3bty/bv39/OnDgwOb24MGDeYiHD/T+/ft048aNXKSB
        RJKk3lchB4SN+QCGZRh64WQkHIZiSEEkIgplXom/jxw5kiYnJ3MiojNeM5zDXBKJiDkkhnNIT07ZSJLU
        +yrkgLAxF0JHnIA5otevX+d0w5ANnZU5IwohNVEcnVM8nZGKWPjy5MmTXAznYliHY6P+JElS76iQA8LG
        nGKY/6EzTvLmzZvcwc6dO9OuXbvS7t2708jIyL8M3bClbXh4OL/P/i9evMgLY5hHoljOG/UnSZJ6R4Uc
        EDbmBMPBpCIKefnyZR6SoQg6olPmjjrnitjSVgpi0QsrdLk1iA9FMqKQgYGBtGfPnnT06NFcLO9JkqS6
        uEYzAsI1ups5IModjbAxF8L8EEMvbJ8+fZq3JB4KpQCKZkiGAsFrCirF8EEY4mFBDPNKzClx3sHBwbwA
        hjDCB2VOSpIk1cVtvYxicI3uZg6IckcjbMwJZnZ2NhfCnBCLWa5fv54TDx3RIZ1z8nILECMezCOVhMQi
        GD4Ac0ilEM5LsiIl3bp1Kz84hWIlSVJdPNSMW3zLSEa3ckCUOxphY04wFEJaohAebsIJKYTkRIecmCQF
        XpeieI99CBx8AIZqKKTMHfX396ehoaHN8/ABJElSXYx4MLLBNbqbOSDKHY2wcTMZlUIogkUpDNOUQkoR
        JKmCYhiyYR8eLbu0tJSHavhgFMlDU5h/Yh/Oyz6dj56VJEl1cBcNwYFrdDdzQJQ7GmFjPiBKRky3sJKW
        Qhiq4eSdxZCwyvxRSUZsKYT92DJCQihhH4ouc0+SJKmeMkLCNbqbOSDKHY2wcbMQikCZOyqF0Blhgo7L
        EA1oY6ELH6jMHfFMexawUmiZsjGQSJLUW6JA0o0cEOWORti4WQiLWbjdp3N1LZ3QGcWQkEBBbEsqYo6p
        rK5lyIYhIArhvP3N+Ye3b0vjfX+Z7N+Wphqnd2xL5xrTzesTP9tO/nzNPrSzPdgcQxsON6/HGhPNa7BP
        Oe5UxxbHGkeafY82OI7XvM9xtPF+ae98v9RD3+xLO3V37gveYz/OVfajFtDO+cs+nBP8Xc4L+gP7Rsey
        Zf9Sa9kX5Xsp+3Xuy368h9JH+Vx8N+U4zkHdvOZY+udvXnMM+5a/ee93/jfjferk/XJM2b/Ux2tqKO30
        C/4ufYOawL7l/J3HsmX/8nnKvvDf9X/fL/XQN/vS/v/570of7MP5Qdts8z2U77Ion4PX1FqOpz7wd6kR
        nBfsW+roPJYt+5fPXfbFv/O/P/uUv0t91P2f9B2U4zh/2YLa6a/X/h/gvAeav4eaa3Q3c0CUOxphY04w
        nIhUxLbcf8xCF9JRKQad9x8zZ8R77ENS4v7jztt9eKLbQHP+//6vf0qSpB5EKOlmDohyRyNszHM85f5j
        5o/KE9oYxinFsLCFThm6Aa9BKup8QhuF8AhaCiEZDTbJK/oCJElSfYeaQNLNHBDljkbYmA8kEfHgsvn5
        +Tzk8nefYc9CmFIIictAIklS72Iqp5s5IModjbAxD60wZ8SCFBaxLC8v56e40TGdkpp4n78ZwqETjqFI
        XlMUv/K3srKSsS/Hsf8uA4kkST3reH93c0CUOxphYz5wYWEhpxpu16GzMhxThmZYtAJeM2dUlIUupCPS
        E8M8fJiymGWngUSSpJ7FQtdu5oAodzTCxnStSUQkm/X19ZyIGKJhBS3KrT0kHVJQSTx0wlAMGK5hdS4P
        Ufn06VM+F6kpzz8ZSCRJ6lnccdPNHBDljkbYmP6xtJRXxnLfMSck1ZCWmE8qq26ZJyL5MLfEloILbvFh
        EQu3CX39+jVtbGzk5+NTpIFEkqTexe2/3cwBUe5ohI1p4/Xr9GR1telsLi9WYYUtDzZZXFzMwy50BJIP
        80oUXOaK+HGetbW1vGWY5tu3b+njx495YQvFc39z9AVIkqT6mLLpZg6IckcjbNxSeZY9iYnbf5gn4lag
        rAkcexrcNsTCGJIWHw78zYNZoi9AkiTVx7Wah6pxt81Eo7zmQXA8VG1vc40faZTrPhmALEAmIBuQEaLs
        sIWwcUvMJTFnxPALC1xYWVvuP44+nCRJ+n0w21Gu+yUDkAnIBmSEKDtsIWzcEnNADN8wHEPH5d5kRIVL
        kqTfx2jfX4MTnRmATEA2+MU6kV8JG7d05syZvGiFB6Ww4pafLeaWIESFS5Kk30f+LZyf130yAFmATEA2
        ICNE2WELYeOWDCSSJP3nYn2ogUSSJFXlCIkkSarupIFEkiTVxi3ABhJJklQVzxYzkEiSpKryw9IMJJIk
        qabZHQYSSZJU2cXBPgOJJEmq64IjJJIkqbYJb/uVJEm1GUgkSVJ13vYrSZKqm3ENiSRJqs0ntUqSpOqO
        GEgkSVJt/rieJEmqbtpAIkmSavPR8ZIkqToDiSRJqs5AIkmSqpvbsd1AIkmS6nKERJIkVeddNpIkqbpJ
        A4kkSartlIFEkiTVZiCRJEnVjftbNpIkqbajBhJJklTbYQOJJEmqbcI1JJIkqbZjBhJJklTbCQOJJEmq
        zRESSZJU3Yy/ZSNJkmqbcoREkiTVNuptv5Ikqbb9BhJJklSbd9lIkqTqJg0kkiSpNkdIJElSdScNJJIk
        qbaDLmqVJEm1+Wu/kiSpuqMGEkmSVNusj46XJEm1XRzsM5BIkqS6LjhCIkmSapvwtl9JklSbgUSSJFXn
        bb+SJKm6GdeQSJKk2nxSqyRJqu6IgUSSJNXmj+tJkqTqpg0kkiSpNh8dL0mSqjOQSJKk6gwkkiSpurkd
        2w0kkiSpLkdIJElSdd72K0mSqpsykEiSpNocIZEkSdWdMJBIkqTaDCSSJKk6A4kkSarONSSSJKm6iV4J
        JNPT0+nSpUvp2bNn6fDhw+n27dtpfHw8iwqXJEm/j6NNICnXfTIAWYBMQDYgI0TZYQth45ZIQnR469at
        tG/fvnThwoU0NjaWRYVLkqTfx9j2bZvXfTIAWYBMQDYgI0TZYQth45b27NmTOz9+/HgaGhrKCWnXrl1Z
        VLgkSfp97G4CSbnukwHIAmQCsgEZIcoOWwgbtzQwMJAGBwfT8PBw6u/vzwWxRV/f9kbfT3+97u/vS/v2
        DKfpiQNp5vBI+OEkSVJ9x/u3pT1N4BhuDP0fOxuDjYEmC5TrfskAZAKyARkhyg5bCBvTxsZGWllZSefP
        n8/JZ25uLt28eTPdvXs3zxXdu3cvL2LB0tJSWl5ezvuvrq6mtbW1PI/0/Pnz9OHDh/Tnn3+mz58/p9ev
        X6WFhWtpct9g+AVIkqT6Jvq2pTd/Mwc8efIkZ4DOHPDjx4+cA169epWuXr0a5o5G2JgePHiQ3r59m0/O
        atljx47lYi5evJjnili0gsuXL2fz8/N5Ze3i4mIu+M6dO+n+/fs52Hz//j29e/euCSMLf80tjRlIJEnq
        VUebQNLNHBDljkbYmBMMaWd9fT1duXIlHTp0KE1MTGyiMDBfdOLEiXTq1Kl08uTJNDU1lWZmZnLxZ8+e
        TQ8fPkxfvnxJjx8/zkWcPn06je81kEiS1KsYIelmDohyRyNsTOfOnctJhoTDltt59u7du2l0dDSvrGXx
        Cvbv358OHDiwuT148GAe4uEDvX//Pt24cSMXSSEHhwfCL0CSJNXHCEk3c0CUOxphYz6AYRmGXjgZCYeh
        GFIQiYhCmVfibx6KMjk5mRMRnfGa4ZxHjx7lRMQcEsM5pCfS0ejQjvALkCRJ9R1pAkk3c0CUOxphYy6E
        jjgBc0Q8fY10w5ANnZU5IwohNVEcnVM8nZGKWPjC4haK4VwM63DsyM7+8AuQJEn17f8ZSLqVA6Lc0Qgb
        c4ph/ofOOMmbN29yBzt37sy39+zevTuNjIz8y9ANW9q47Yf32f/Fixd5YQzzSBTLeXcN9IVfgCRJqm9k
        e3dzQJQ7GmFjTjAcTCqikJcvX+YhGYqgIzpl7qhzrogtbaUgFr2wQpdbg/hQJCMK4V7l6AuQJEn1ca3v
        Zg6IckcjbMyFMD/E0Avbp0+f5i2JhyewUQDDNgzJUCB4TUGlGD4IQzwsiGFeiTklzlseosJ+ncdLkqR6
        uK5z/S6BpFs5IModjbAxJ5jZ2dlcCHNCLGa5fv16Tjx0RId0zsnLLUA8u555pJKQWATDB2AOqRTCefmg
        FM15ebhKebCKJEmqhzUiXK+5RnczB0S5oxE25gRDITwEhUJ4uAknpBBu76FDTsx8EHhdiuI99uFHdvgA
        DNVQSJk7YoSEZ96X8/ABJElSXWWEhGt0N3NAlDsaYeNmMiqFUASLUsqP6tFZKYI5oYJiSFbsw+gHj5Nl
        qIYPRpE8NIW5J/alUB4ty3COJEmqi59/4SFoZa1Ht3JAlDsaYWM+IEpGhAlW0lIIQzWcvLMYElaZPyrJ
        iC2FsB9bfniHQll9y2IZ7muWJEl1cc3nWs01ups5IModjbBxsxCKQJk7KoXQGQmIjssQDWhjoQtDPmXu
        iGfaEz4olMTFrwCSsDiWdlbeSpKkurhGM23DNbqbOSDKHY2wcbMQFrNwu0/n6lo6oTOKISGBgtiWVMQc
        U1ldy5ANc0cUwnmj/iRJUu+okAPCxpxgOBGpiG25/5iFLqSjUgw67z9mmIf32IekxP3Hnbf78ES3qD9J
        ktQ7KuSAsDHP8ZT7j5k/Kk9o45bdUgxDOnTK0A14DVJR5xPaKIRH0FKIIySSJPW+CjkgbMwHkohYdDo/
        P5+HXP7uM+xZCFMK+cXckSRJ6hEVckDYmIdWmDNiQQqLWJaXl/MKXDqmU1IT7/N3eTAKx1AkrymKX/lb
        WVnJ2JfjfjFUI0mSekSFHBA25gMXFhZyquF2HTorwzFlaIZFK+A1c0ZFWehCOiI9MczDh3FRqyRJ/x4q
        5ICwMV1rEhHJZn19PScihmhYQYtyaw9JhxRUEg+dMBQDhmtYnctDVD59+pTPRWqiPepPkiT1jgo5IGxM
        /1hayitjue+YE5JqSEvMJ5VVt8wTkXyYW2JLwQW3+LCIhduEvn79mjY2NvLT334xdyRJknpEhRwQNqaN
        16/Tk9XVprO5vFiFFbY82GRxcTEPu9ARSD7MK1FwmSvi0bNra2t5yzDNt2/f0sePH/PCFoqP+pMkSb2j
        Qg4IGyVJktoUNkqSJLUpbJQkSWpT2ChJktSmsFGSJKlNYaMkSVKbwkZJkqQ2hY2SJEltChslSZLaFDZK
        kiS1KWyUJElqU9goSZLUprBRkiSpTWGjJElSm8JGSZKkNoWNkiRJbQobJUmS2hQ2SpIktWRb+h+hWQ5S
        MV6UqAAAAABJRU5ErkJggg==
</value>
  </data>
</root>