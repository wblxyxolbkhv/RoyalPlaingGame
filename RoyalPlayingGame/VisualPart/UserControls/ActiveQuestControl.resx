<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>