<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>